function urn_create(probRed, ambLevel, exante, outcomeRed, outcomeBlue)
% we are making a function called unr containing three main variables...
% probRed= probRedability level: 0.13, 0.25, 0.38...
% amblevel=ambiguity level: 0, 0.25, 0.50, 0.75...
% exante= true or false
% color = this command indicates the winning color 1=red 0=blue

wRect = 0.5;
% the width of the rectangle is 0.5;

hRed = rectangle('position', [0 0 wRect probRed],...
    'FaceColor',[1 0 0],...
    'EdgeColor',[0.5 0.5 0.5],...
    'linewidth',2);
% we are setting the red rectangle, the position is x=0, y=0...
% width=wRect and high=probRed. The face color is red, the edge gray and...
% linewidth 2

hBlue = rectangle('position',[0 probRed wRect 1-probRed], ...
    'FaceColor',[0 0 1], ...
    'EdgeColor',[0.5 0.5 0.5], ...
    'linewidth', 2);
% we are setting the blue rectangle, the position is x=0, y=probRed level...
% width=wRect and high=1-probRed. The face color is blue, the edge gray and...
%linewidth 2

wAmb = 0.55;

if ambLevel > 0
    % the if condition allows us to set the width of the ambRectangle

    hAmb = rectangle('position', [-(wAmb-wRect)/2 0.5-ambLevel/2 ...
                                   wAmb           ambLevel], ...
                     'FaceColor',[0.5 0.5 0.5], ...
                     'EdgeColor',[0.5 0.5 0.5], ...
                     'lineWidth',2);
    % the ambiguity rectangle position x= -(the diff btw the width of the ...
    % rectangle and ambiguity width, y= 0.5-hAmb/2 and widgh=wAmb, hAmb=hAmb
end

if exante
%  we are setting the occluder rectangle in exante
%  nStrips = 3;
%  x = repmat(( wAmb/8nStrips+1)) * (1:nStrips)-(wAmb-wRect)/2, 2, 1);
%  y = repmat( 0.5 - hAmb/2 + [0; hAmb], 1, nstrips);
%  line(x, y, 'color', [1 1 0], 'linewidth', 25);
   set(hAmb, 'FaceColor', [1 1 0])
end

% Write outcome values
ht = text(0.25, -0.05, num2str(outcomeRed));
set(ht, 'Color', 'w', 'FontSize', 18, 'HorizontalAlignment', 'center');
ht = text(0.25, 1.05, num2str(outcomeBlue));
set(ht, 'Color', 'w', 'FontSize', 18, 'HorizontalAlignment', 'center');

% Setting of axes
set(gca, 'Xlim', [0 0.5], 'Ylim', [0 1], ...
         'color',[0 0 0], ...
         'XTicklabel', [], 'YTicklabel', []);
axis equal 


             